include "credential.conf"

# Internationalization

play.i18n.langs = [ "en", "ko", "pt-BR"]

# buffer size
play.http.parser.maxDiskBuffer = 100MB

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#db.default.driver=org.h2.Driver
#db.default.url="jdbc:h2:mem:play"
#db.default.driver=org.postgresql.Driver
#db.default.url="jdbc:postgresql://localhost:5432/test"
#db.default.username="postgres"
#db.default.password="Gogol"

db.default {
  driver = "org.postgresql.Driver"
  host = "localhost:5432"
  database = "test"
  username = "postgres"
  password = "Gogol"


  url = "jdbc:postgresql://"${db.default.host}"/"${db.default.database}

}


play.evolutions.db.default.autoApply=true
play.evolutions.db.default.autoApplyDowns=true

# Assets configuration
# ~~~~~
"assets.cache./public/stylesheets/bootstrap.min.css"="max-age=3600"


# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9

play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

play.filters {

  # Enabled filters are run automatically against Play.
  # CSRFFilter, AllowedHostFilters, and SecurityHeadersFilters are enabled by default.
  #enabled += filters.ExampleFilter
  #enabled += "play.filters.cors.CORSFilter"

  # Disabled filters remove elements from the enabled list.
  #disabled += filters.ExampleFilter
}


## Filter Configuration
# https://www.playframework.com/documentation/latest/Filters
# ~~~~~
# There are a number of built-in filters that can be enabled and configured
# to give Play greater security.
#
play.filters {
  ## Security headers filter configuration
  # https://www.playframework.com/documentation/latest/SecurityHeaders
  # ~~~~~
  # Defines security headers that prevent XSS attacks.
  # If enabled, then all options are set to the below configuration by default:
  headers {
    # The X-Frame-Options header. If null, the header is not set.
    #frameOptions = "DENY"

    # The X-XSS-Protection header. If null, the header is not set.
    #xssProtection = "1; mode=block"

    # The X-Content-Type-Options header. If null, the header is not set.
    #contentTypeOptions = "nosniff"

    # The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
    #permittedCrossDomainPolicies = "master-only"

    # The Content-Security-Policy header. If null, the header is not set.
    contentSecurityPolicy = "default-src 'self'; img-src 'self' https://*.amazonaws.com https://via.placeholder.com http://placekitten.com/200/126 data:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';"
  }
}

play.mailer {
  host = "smtp.gmail.com" // (mandatory)
  port = 587 // (defaults to 25)
  ssl = no // (defaults to no)
  tls = yes // (defaults to no)
  tlsRequired = yes // (defaults to no)
  user = "salao4989@gmail.com" // (optional)
  password = "sometest" // (optional)
  debug = no // (defaults to no, to take effect you also need to set the log level to "DEBUG" for the application logger)
  timeout = null // (defaults to 60s in milliseconds)
  connectiontimeout = null // (defaults to 60s in milliseconds)
  mock = no // (defaults to no, will only log all the email properties instead of sending an email)
}

